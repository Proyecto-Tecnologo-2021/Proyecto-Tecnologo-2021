<?xml version="1.0" encoding="UTF-8"?>
<!--
    JBoss, Home of Professional Open Source
    Copyright 2015, Red Hat, Inc. and/or its affiliates, and individual
    contributors by the @authors tag. See the copyright.txt in the
    distribution for a full listing of individual contributors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>Proyecto2021G03</groupId>
        <artifactId>appettit</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <artifactId>appettit-ejb</artifactId>
    <packaging>ejb</packaging>
    <name>appettit - ejb</name>
    <description>This is the EJB POM file</description>

    <dependencies>

        <!-- Import the CDI API, we use provided scope as the API is included in WildFly / JBoss EAP -->
        <dependency>
            <groupId>jakarta.enterprise</groupId>
            <artifactId>jakarta.enterprise.cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Test scope dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Bean Validation Implementation 
             Provides portable constraints such as @Email 
             Hibernate Validator is shipped in WildFly / JBoss EAP -->
        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JPA API, we use provided scope as the API is included in WildFly / JBoss EAP -->
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Optional, but highly recommended -->
        <!-- Arquillian allows you to test enterprise code such as EJBs and
            Transactional(JTA) JPA from JUnit/TestNG -->
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Declare the APIs we depend on and need for compilation. All of
            them are provided by WildFly / JBoss EAP -->

        <!-- Import the EJB API, we use provided scope as the API is included in WildFly / JBoss EAP -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.xml.bind</groupId>
            <artifactId>jboss-jaxb-api_2.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.3_spec</artifactId>
            <scope>provided</scope>
        </dependency>
        
		<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-spatial -->
		<dependency>
		    <groupId>org.hibernate</groupId>
		    <artifactId>hibernate-spatial</artifactId>
		    <version>5.0.12.Final</version>
		</dependency>
				
		<!-- https://mvnrepository.com/artifact/net.postgis/postgis-jdbc --> 
		<dependency>
		    <groupId>net.postgis</groupId>
		    <artifactId>postgis-jdbc</artifactId>
		    <version>2.2.1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.hibernate.ogm/hibernate-ogm-mongodb -->
		<dependency>
		    <groupId>org.hibernate.ogm</groupId>
		    <artifactId>hibernate-ogm-mongodb</artifactId>
		    <version>5.4.1.Final</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.hibernate.ogm/hibernate-ogm-bom -->
		<dependency>
		    <groupId>org.hibernate.ogm</groupId>
		    <artifactId>hibernate-ogm-bom</artifactId>
		    <version>5.4.1.Final</version>
		    <type>pom</type>
		</dependency>
		
		<dependency>
		    <groupId>org.mongodb</groupId>
		    <artifactId>mongodb-driver-sync</artifactId>
		    <version>4.3.3</version>
		</dependency>
		        
        <!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.20</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- BCrypt -->
		<dependency>
		    <groupId>at.favre.lib</groupId>
		    <artifactId>bcrypt</artifactId>
		    <version>0.9.0</version>
		</dependency>
		
		<!-- Json Web Token -->
		<dependency>
		    <groupId>io.jsonwebtoken</groupId>
		    <artifactId>jjwt</artifactId>
		    <version>0.9.1</version>
		</dependency>
		
    </dependencies>

    <build>
        <!-- Tell Maven that the resulting file should not have a file name containing the version - 
		     a non versioned name is required e.g. when building a deployable artifact using the ShrinkWrap API -->
        <finalName>${project.artifactId}</finalName>

        <plugins>			
			<!--Configure the EJB plugin: we create EJB 3.2. If not specified, an error will arise because the plugin expects an Ejb-jar by default. -->
			<plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-ejb-plugin</artifactId>
                    <version>${version.ejb.plugin}</version>
                    <configuration>
                        <!-- Tell Maven we are using EJB 3.2 -->
                        <ejbVersion>3.2</ejbVersion>
                    </configuration>
                </plugin>
        </plugins>
    </build>
</project>
